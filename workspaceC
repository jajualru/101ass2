;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname workspaceC) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require rsound)
(require 2htdp/image)
(require 2htdp/universe)

;
;;;;;;;;;;;;;;;;;;;OUTSIDE CODE;;;;;;;;;;;;;;;;;;;
;
(define ps (make-pstream))

(define PLAY-FRAMES (/ FRAME-RATE 20))

(define (time-to-play? end-frame cur-frame)
  (< (- end-frame cur-frame) MAX-QUEUE-INTERVAL))

(define MAX-QUEUE-INTERVAL (* 3/80 FRAME-RATE))

(define (both a b) b)

(define BOX-HEIGHT 200)
(define BOX-WIDTH 600)

(define CROSSHAIR-LENGTH 30)
(define CROSSHAIR-WIDTH 10)
(define crosshair (place-image (rectangle CROSSHAIR-WIDTH CROSSHAIR-LENGTH "solid" "purple")
                               (/ CROSSHAIR-LENGTH 2) (/ CROSSHAIR-LENGTH 2)
                               (place-image
                                (rectangle CROSSHAIR-LENGTH CROSSHAIR-WIDTH "solid" "purple")
                                (/ CROSSHAIR-LENGTH 2) (/ CROSSHAIR-LENGTH 2)
                                (rectangle CROSSHAIR-LENGTH CROSSHAIR-LENGTH "solid" "light blue"))))

(define SLIDER-BG (rectangle BOX-WIDTH
                             BOX-HEIGHT
                             "solid"
                             "light blue"))

(define (draw-slider ws)
  (place-image crosshair
               (* (ws-frac-x ws)
                  BOX-WIDTH)
               (* (ws-frac-y ws)
                  BOX-HEIGHT)
               SLIDER-BG))

(define TICK-LEN 1/40)

;
;;;;;;;;;;;;;;;;;;;;;NEW CODE;;;;;;;;;;;;;;;;;;;;;
;

; Constants
(define NOTE
  (resample-to-rate
   FRAME-RATE
   kick))

(define NOTE-LENGTH
  (rs-frames NOTE))

(define PAUSE-SCALE (* 1 FRAME-RATE))

(define-struct ws [frac-x frac-y song-frame end-frame])

(define INITIAL-STATE (make-ws 0.5 0.5 0 PLAY-FRAMES))

; Code
(define (pause-len frac-x)
  (* PAUSE-SCALE frac-x))

(define (song-len frac-x)
  (+ NOTE-LENGTH (pause-len frac-x)))


(define (queue-next-fragment song-frame frame-to-play)
  (if (< (+ song-frame PLAY-FRAMES) (rs-frames kick))
      (pstream-queue ps
                     (clip NOTE song-frame (+ song-frame PLAY-FRAMES))
                     frame-to-play);;EDITING HERE
      (pstream-queue ps
                     (silence PLAY-FRAMES)
                     frame-to-play)))


(define (tick-fun ws)
  (cond [(time-to-play? (ws-end-frame ws)
                        (pstream-current-frame ps))
         (if (> (song-len (ws-frac-x ws)) (ws-song-frame ws))
             (both
              (queue-next-fragment
               (ws-song-frame ws) ;;FIX THIS
               (ws-end-frame ws))
              (make-ws (ws-frac-x ws)
                       (ws-frac-y ws)
                       (+ (ws-song-frame ws) PLAY-FRAMES)
                       (+ (ws-end-frame ws) PLAY-FRAMES)))
             (both
              (queue-next-fragment
               0
               (ws-end-frame ws))
              (make-ws (ws-frac-x ws)
                       (ws-frac-y ws)
                       PLAY-FRAMES
                       (+ (ws-end-frame ws) PLAY-FRAMES))))]
        [else ws]))


(define (handle-mouse ws x y event)
  (cond [(string=? event "button-down")
         (make-ws (/ x BOX-WIDTH)
                  (/ y BOX-HEIGHT)
                  (ws-song-frame ws)
                  (ws-end-frame ws))]
        [(string=? event "drag")
         (make-ws (/ x BOX-WIDTH)
                  (/ y BOX-HEIGHT)
                  (ws-song-frame ws)
                  (ws-end-frame ws))]
        [else ws]))


;
;;;;;;;;;;;;;;;;;;;TESTING CODE;;;;;;;;;;;;;;;;;;;
;
(define main
  (big-bang INITIAL-STATE
            [on-mouse handle-mouse]
            [on-tick tick-fun TICK-LEN]
            [to-draw draw-slider]))